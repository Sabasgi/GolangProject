name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Clear any cached Go version
      - name: Clear Go version cache (optional)
        run: rm -rf /opt/hostedtoolcache/go

      # Setup Go version 1.20 explicitly
      - name: Set up Go (version 1.20.0)
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.0

      # Check Go version after setup
      - name: Check Go version
        run: go version  # Verify the installed Go version
      - name: Install dependencies
        run: go mod tidy
        working-directory: ./labms 
        
        # Build the application
      - name: Run go build
        run: go build -o main .
        working-directory: ./labms  # Run 'go build' in the labms directory
        # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERUSERNAME }}
          password: ${{ secrets.DOCKERPASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Debug Docker Username
        run: echo "DOCKERUSERNAME=${{ secrets.DOCKERUSERNAME }}"
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERUSERNAME }}/golangprojects:latest .
          docker push ${{ secrets.DOCKERUSERNAME }}/golangprojects:latest
      # Verify Docker image exists
      - name: Verify Docker image exists
        run: |
          docker pull ${{ secrets.DOCKERUSERNAME }}/golangprojects:latest
